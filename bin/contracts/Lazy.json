{
    "contractName": "Lazy",
    "abi": [
        {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "approved",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "bool",
                    "name": "approved",
                    "type": "bool"
                }
            ],
            "name": "ApprovalForAll",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                },
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "previousAdminRole",
                    "type": "bytes32"
                },
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "newAdminRole",
                    "type": "bytes32"
                }
            ],
            "name": "RoleAdminChanged",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                }
            ],
            "name": "RoleGranted",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                }
            ],
            "name": "RoleRevoked",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "DEFAULT_ADMIN_ROLE",
            "outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "MINTER_ROLE",
            "outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "availableToWithdraw",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "getApproved",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                }
            ],
            "name": "getRoleAdmin",
            "outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                },
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "grantRole",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                },
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "hasRole",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                }
            ],
            "name": "isApprovedForAll",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "ownerOf",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "redeemer",
                    "type": "address"
                },
                {
                    "components": [
                        {
                            "internalType": "uint256",
                            "name": "tokenId",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "minPrice",
                            "type": "uint256"
                        },
                        {
                            "internalType": "string",
                            "name": "uri",
                            "type": "string"
                        }
                    ],
                    "internalType": "struct Lazy.NFTVoucher",
                    "name": "voucher",
                    "type": "tuple"
                },
                {
                    "internalType": "bytes",
                    "name": "signature",
                    "type": "bytes"
                }
            ],
            "name": "redeem",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                },
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "renounceRole",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                },
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "revokeRole",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "_data",
                    "type": "bytes"
                }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "internalType": "bool",
                    "name": "approved",
                    "type": "bool"
                }
            ],
            "name": "setApprovalForAll",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes4",
                    "name": "interfaceId",
                    "type": "bytes4"
                }
            ],
            "name": "supportsInterface",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "tokenURI",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"availableToWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"redeemer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"internalType\":\"struct Lazy.NFTVoucher\",\"name\":\"voucher\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/faeze/workspace2/polygon-ethereum-nextjs-marketplace/contracts/Lazy.sol\":\"Lazy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/faeze/workspace2/polygon-ethereum-nextjs-marketplace/contracts/Lazy.sol\":{\"keccak256\":\"0xa19862b3747702e340e4a3a6116b066d4208e0971698af1c8e0a043cb6626f03\",\"urls\":[\"bzz-raw://94977c7db0fea83e45b90fc4a665e248eaeb437c9f9d6022fa5ff179c23775e9\",\"dweb:/ipfs/QmQc69jeA52J5WRS8qL6rkSme5jB79mH4gmfW3X5HBRqRy\"]},\"/home/faeze/workspace2/polygon-ethereum-nextjs-marketplace/node_modules/@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xb9a137b317dc4806805f2259686186c0c053c32d80fe9c15ecdbf2eb1cf52849\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8910762bea89696c6dc68a63be98c6ddd597955f8a29418661cc99d0ce090663\",\"dweb:/ipfs/Qmed14MXXFdNYE22bCuVy5XVAMKUo1DncY8BF8VkyrvXmh\"]},\"/home/faeze/workspace2/polygon-ethereum-nextjs-marketplace/node_modules/@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"/home/faeze/workspace2/polygon-ethereum-nextjs-marketplace/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x81c02855bc239e16ec09eee000a8bec691424c715188d6d881037e69c45414c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46e3ecc8920aeb78c362a387520fe28e022cdc6d04256d9e5874eb8ff6868b6d\",\"dweb:/ipfs/QmdfCTHrV6CZMGiM3KqGF8tWkdNvGpEmWFyy72X1LAHsz2\"]},\"/home/faeze/workspace2/polygon-ethereum-nextjs-marketplace/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"/home/faeze/workspace2/polygon-ethereum-nextjs-marketplace/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"/home/faeze/workspace2/polygon-ethereum-nextjs-marketplace/node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x1cbe42915bc66227970fe99bc0f783eb1de30f2b48f984af01ad45edb9658698\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2baa08eb67d9da46e6c4c049f17b7684a1c68c5268d0f466cfa0eb23ce2bf9b0\",\"dweb:/ipfs/Qmdnj8zj4PfErB2HM2eKmDt7FrqrhggsZ6Qd8MpD593tgj\"]},\"/home/faeze/workspace2/polygon-ethereum-nextjs-marketplace/node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"/home/faeze/workspace2/polygon-ethereum-nextjs-marketplace/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"/home/faeze/workspace2/polygon-ethereum-nextjs-marketplace/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"/home/faeze/workspace2/polygon-ethereum-nextjs-marketplace/node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"/home/faeze/workspace2/polygon-ethereum-nextjs-marketplace/node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xe9e291de7ffe06e66503c6700b1bb84ff6e0989cbb974653628d8994e7c97f03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1e25b64dd48a67832ea99b2f5b3cb18ed8ada44e0391ed896d7a293200df3b\",\"dweb:/ipfs/Qmd4nwBHmB7An2MmebcagkTx2m5mRGZPR32u1xCHqEKerh\"]},\"/home/faeze/workspace2/polygon-ethereum-nextjs-marketplace/node_modules/@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]},\"/home/faeze/workspace2/polygon-ethereum-nextjs-marketplace/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"/home/faeze/workspace2/polygon-ethereum-nextjs-marketplace/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"/home/faeze/workspace2/polygon-ethereum-nextjs-marketplace/node_modules/hardhat/console.sol\":{\"keccak256\":\"0x72b6a1d297cd3b033d7c2e4a7e7864934bb767db6453623f1c3082c6534547f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8cb8681076e765c214e0d51cac989325f6b98e315eaae06ee0cbd5a9f084763\",\"dweb:/ipfs/QmNWGHi4zmjxQTYN3NMGnJd49jBT5dE4bxTdWEaDuJrC6N\"]}},\"version\":1}",
    "bytecode": "",
    "deployedBytecode": "",
    "sourceMap": "851:3991:0:-:0;;;1066:65;;;;;;;;;;2455:602:12;;;;;;;;;;;;;-1:-1:-1;;;2455:602:12;;;;;;;;;;;;;;;;-1:-1:-1;;;2455:602:12;;;1375:113:3;;;;;;;;;;;;;-1:-1:-1;;;1375:113:3;;;;;;;;;;;;;;;;-1:-1:-1;;;1375:113:3;;;1449:5;1441;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1464:17:3;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2541:22:12;;;;;;;2597:25;;;;;;;;;2778;;;;2813:31;;;;2873:13;2854:32;;;;-1:-1:-1;3633:73:12;;2651:117;3633:73;;;273:25:16;;;314:18;;;307:34;;;;-1:-1:-1;357:18:16;;350:34;;;;400:18;;;;393:34;;;;3700:4:12;443:19:16;;;436:61;;;3633:73:12;;;;;;;;;;245:19:16;;;;3633:73:12;;;3623:84;;;;;;;2896:85;;2991:28;;;;3029:21;;-1:-1:-1;851:3991:0;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;851:3991:0;;;-1:-1:-1;851:3991:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;508:380:16;587:1;583:12;;;;630;;;651:61;;705:4;697:6;693:17;683:27;;651:61;758:2;750:6;747:14;727:18;724:38;721:161;;;804:10;799:3;795:20;792:1;785:31;839:4;836:1;829:15;867:4;864:1;857:15;721:161;;508:380;;;:::o;:::-;851:3991:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "deployedSourceMap": "851:3991:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4549:291;;;;;;;;;;-1:-1:-1;4549:291:0;;;;;:::i;:::-;;:::i;:::-;;;565:14:16;;558:22;540:41;;528:2;513:18;4549:291:0;;;;;;;;2473:98:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3984:217::-;;;;;;;;;;-1:-1:-1;3984:217:3;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:16;;;1674:51;;1662:2;1647:18;3984:217:3;1528:203:16;3522:401:3;;;;;;;;;;-1:-1:-1;3522:401:3;;;;;:::i;:::-;;:::i;:::-;;1754:929:0;;;;;;:::i;:::-;;:::i;:::-;;;3859:25:16;;;3847:2;3832:18;1754:929:0;3713:177:16;4711:330:3;;;;;;;;;;-1:-1:-1;4711:330:3;;;;;:::i;:::-;;:::i;3977:121:1:-;;;;;;;;;;-1:-1:-1;3977:121:1;;;;;:::i;:::-;4043:7;4069:12;;;:6;:12;;;;;:22;;;;3977:121;4348:145;;;;;;;;;;-1:-1:-1;4348:145:1;;;;;:::i;:::-;;:::i;5365:214::-;;;;;;;;;;-1:-1:-1;5365:214:1;;;;;:::i;:::-;;:::i;2689:425:0:-;;;;;;;;;;;;;:::i;5107:179:3:-;;;;;;;;;;-1:-1:-1;5107:179:3;;;;;:::i;:::-;;:::i;2176:235::-;;;;;;;;;;-1:-1:-1;2176:235:3;;;;;:::i;:::-;;:::i;1914:205::-;;;;;;;;;;-1:-1:-1;1914:205:3;;;;;:::i;:::-;;:::i;2894:137:1:-;;;;;;;;;;-1:-1:-1;2894:137:1;;;;;:::i;:::-;;:::i;2635:102:3:-;;;;;;;;;;;;;:::i;2012:49:1:-;;;;;;;;;;-1:-1:-1;2012:49:1;2057:4;2012:49;;4268:153:3;;;;;;;;;;-1:-1:-1;4268:153:3;;;;;:::i;:::-;;:::i;5352:320::-;;;;;;;;;;-1:-1:-1;5352:320:3;;;;;:::i;:::-;;:::i;467:663:6:-;;;;;;;;;;-1:-1:-1;467:663:6;;;;;:::i;:::-;;:::i;944:62:0:-;;;;;;;;;;;;982:24;944:62;;4727:147:1;;;;;;;;;;-1:-1:-1;4727:147:1;;;;;:::i;:::-;;:::i;3120:115:0:-;;;;;;;;;;-1:-1:-1;3217:10:0;3172:7;3198:30;;;:18;:30;;;;;;3120:115;;4487:162:3;;;;;;;;;;-1:-1:-1;4487:162:3;;;;;:::i;:::-;-1:-1:-1;;;;;4607:25:3;;;4584:4;4607:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4487:162;4549:291:0;4697:4;4736:37;4761:11;4736:24;:37::i;:::-;:97;;;;4789:44;4821:11;4789:31;:44::i;:::-;4717:116;4549:291;-1:-1:-1;;4549:291:0:o;2473:98:3:-;2527:13;2559:5;2552:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2473:98;:::o;3984:217::-;4060:7;4087:16;4095:7;4087;:16::i;:::-;4079:73;;;;-1:-1:-1;;;4079:73:3;;6791:2:16;4079:73:3;;;6773:21:16;6830:2;6810:18;;;6803:30;6869:34;6849:18;;;6842:62;-1:-1:-1;;;6920:18:16;;;6913:42;6972:19;;4079:73:3;;;;;;;;;-1:-1:-1;4170:24:3;;;;:15;:24;;;;;;-1:-1:-1;;;;;4170:24:3;;3984:217::o;3522:401::-;3602:13;3618:23;3633:7;3618:14;:23::i;:::-;3602:39;;3665:5;-1:-1:-1;;;;;3659:11:3;:2;-1:-1:-1;;;;;3659:11:3;;;3651:57;;;;-1:-1:-1;;;3651:57:3;;7204:2:16;3651:57:3;;;7186:21:16;7243:2;7223:18;;;7216:30;7282:34;7262:18;;;7255:62;-1:-1:-1;;;7333:18:16;;;7326:31;7374:19;;3651:57:3;7002:397:16;3651:57:3;719:10:9;-1:-1:-1;;;;;3740:21:3;;;;:62;;-1:-1:-1;3765:37:3;3782:5;719:10:9;4487:162:3;:::i;3765:37::-;3719:165;;;;-1:-1:-1;;;3719:165:3;;7606:2:16;3719:165:3;;;7588:21:16;7645:2;7625:18;;;7618:30;7684:34;7664:18;;;7657:62;7755:26;7735:18;;;7728:54;7799:19;;3719:165:3;7404:420:16;3719:165:3;3895:21;3904:2;3908:7;3895:8;:21::i;:::-;3592:331;3522:401;;:::o;1754:929:0:-;1895:7;1988:14;2005:27;2013:7;2022:9;2005:7;:27::i;:::-;1988:44;;2211:7;:16;;;2198:9;:29;;2190:70;;;;-1:-1:-1;;;2190:70:0;;8031:2:16;2190:70:0;;;8013:21:16;8070:2;8050:18;;;8043:30;8109;8089:18;;;8082:58;8157:18;;2190:70:0;7829:352:16;2190:70:0;2353:30;2359:6;2367:15;;2353:5;:30::i;:::-;2393:42;2406:15;;2423:11;;;;2406:7;2423:11;:::i;:::-;2393:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2393:12:0;;-1:-1:-1;;;2393:42:0:i;:::-;2492:44;2502:6;2510:8;2520:15;;2492:9;:44::i;:::-;-1:-1:-1;;;;;2604:26:0;;;;;;:18;:26;;;;;:39;;2634:9;;2604:26;:39;;2634:9;;2604:39;:::i;:::-;;;;-1:-1:-1;;2661:15:0;;;1754:929;-1:-1:-1;;;;1754:929:0:o;4711:330:3:-;4900:41;719:10:9;4933:7:3;4900:18;:41::i;:::-;4892:103;;;;-1:-1:-1;;;4892:103:3;;;;;;;:::i;:::-;5006:28;5016:4;5022:2;5026:7;5006:9;:28::i;4348:145:1:-;4043:7;4069:12;;;:6;:12;;;;;:22;;;2490:30;2501:4;719:10:9;2490::1;:30::i;:::-;4461:25:::1;4472:4;4478:7;4461:10;:25::i;5365:214::-:0;-1:-1:-1;;;;;5460:23:1;;719:10:9;5460:23:1;5452:83;;;;-1:-1:-1;;;5452:83:1;;9598:2:16;5452:83:1;;;9580:21:16;9637:2;9617:18;;;9610:30;9676:34;9656:18;;;9649:62;-1:-1:-1;;;9727:18:16;;;9720:45;9782:19;;5452:83:1;9396:411:16;5452:83:1;5546:26;5558:4;5564:7;5546:11;:26::i;:::-;5365:214;;:::o;2689:425:0:-;2893:10;2858:24;2932:28;;;:18;:28;;;;;;;;3040:32;;;;3082:25;;2932:28;;2893:10;;3082:25;;;;;2932:28;;3082:25;;2858:24;3082:25;2932:28;2893:10;3082:25;;;;;;;;;;;;;;;;;;;5107:179:3;5240:39;5257:4;5263:2;5267:7;5240:39;;;;;;;;;;;;:16;:39::i;2176:235::-;2248:7;2283:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2283:16:3;2317:19;2309:73;;;;-1:-1:-1;;;2309:73:3;;10014:2:16;2309:73:3;;;9996:21:16;10053:2;10033:18;;;10026:30;10092:34;10072:18;;;10065:62;-1:-1:-1;;;10143:18:16;;;10136:39;10192:19;;2309:73:3;9812:405:16;1914:205:3;1986:7;-1:-1:-1;;;;;2013:19:3;;2005:74;;;;-1:-1:-1;;;2005:74:3;;10424:2:16;2005:74:3;;;10406:21:16;10463:2;10443:18;;;10436:30;10502:34;10482:18;;;10475:62;-1:-1:-1;;;10553:18:16;;;10546:40;10603:19;;2005:74:3;10222:406:16;2005:74:3;-1:-1:-1;;;;;;2096:16:3;;;;;:9;:16;;;;;;;1914:205::o;2894:137:1:-;2972:4;2995:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;2995:29:1;;;;;;;;;;;;;;;2894:137::o;2635:102:3:-;2691:13;2723:7;2716:14;;;;;:::i;4268:153::-;4362:52;719:10:9;4395:8:3;4405;4362:18;:52::i;5352:320::-;5521:41;719:10:9;5554:7:3;5521:18;:41::i;:::-;5513:103;;;;-1:-1:-1;;;5513:103:3;;;;;;;:::i;:::-;5626:39;5640:4;5646:2;5650:7;5659:5;5626:13;:39::i;:::-;5352:320;;;;:::o;467:663:6:-;540:13;573:16;581:7;573;:16::i;:::-;565:78;;;;-1:-1:-1;;;565:78:6;;10835:2:16;565:78:6;;;10817:21:16;10874:2;10854:18;;;10847:30;10913:34;10893:18;;;10886:62;-1:-1:-1;;;10964:18:16;;;10957:47;11021:19;;565:78:6;10633:413:16;565:78:6;654:23;680:19;;;:10;:19;;;;;654:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;709:18;730:10;3449:9:3;;;;;;;;;-1:-1:-1;3449:9:3;;;3373:92;730:10:6;709:31;;819:4;813:18;835:1;813:23;809:70;;;-1:-1:-1;859:9:6;467:663;-1:-1:-1;;467:663:6:o;809:70::-;981:23;;:27;977:106;;1055:4;1061:9;1038:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1024:48;;;;467:663;;;:::o;977:106::-;1100:23;1115:7;1100:14;:23::i;:::-;1093:30;467:663;-1:-1:-1;;;;467:663:6:o;4727:147:1:-;4043:7;4069:12;;;:6;:12;;;;;:22;;;2490:30;2501:4;719:10:9;2490::1;:30::i;:::-;4841:26:::1;4853:4;4859:7;4841:11;:26::i;1555:300:3:-:0;1657:4;-1:-1:-1;;;;;;1692:40:3;;-1:-1:-1;;;1692:40:3;;:104;;-1:-1:-1;;;;;;;1748:48:3;;-1:-1:-1;;;1748:48:3;1692:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:13;;;1812:36:3;829:155:13;2605:202:1;2690:4;-1:-1:-1;;;;;;2713:47:1;;-1:-1:-1;;;2713:47:1;;:87;;;2764:36;2788:11;2764:23;:36::i;7144:125:3:-;7209:4;7232:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7232:16:3;:30;;;7144:125::o;10995:171::-;11069:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11069:29:3;-1:-1:-1;;;;;11069:29:3;;;;;;;;:24;;11122:23;11069:24;11122:14;:23::i;:::-;-1:-1:-1;;;;;11113:46:3;;;;;;;;;;;10995:171;;:::o;4298:245:0:-;4415:7;4438:14;4455;4461:7;4455:5;:14::i;:::-;4438:31;;4486:50;4526:9;4486:31;:6;8239:58:11;;16911:66:16;8239:58:11;;;16899:79:16;16994:12;;;16987:28;;;8109:7:11;;17031:12:16;;8239:58:11;;;;;;;;;;;;8229:69;;;;;;8222:76;;8040:265;;;;4486:31:0;:39;;:50::i;9063:372:3:-;-1:-1:-1;;;;;9142:16:3;;9134:61;;;;-1:-1:-1;;;9134:61:3;;11728:2:16;9134:61:3;;;11710:21:16;;;11747:18;;;11740:30;11806:34;11786:18;;;11779:62;11858:18;;9134:61:3;11526:356:16;9134:61:3;9214:16;9222:7;9214;:16::i;:::-;9213:17;9205:58;;;;-1:-1:-1;;;9205:58:3;;12089:2:16;9205:58:3;;;12071:21:16;12128:2;12108:18;;;12101:30;12167;12147:18;;;12140:58;12215:18;;9205:58:3;11887:352:16;9205:58:3;-1:-1:-1;;;;;9330:13:3;;;;;;:9;:13;;;;;:18;;9347:1;;9330:13;:18;;9347:1;;9330:18;:::i;:::-;;;;-1:-1:-1;;9358:16:3;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9358:21:3;-1:-1:-1;;;;;9358:21:3;;;;;;;;9395:33;;9358:16;;;9395:33;;9358:16;;9395:33;9063:372;;:::o;1277:214:6:-;1376:16;1384:7;1376;:16::i;:::-;1368:75;;;;-1:-1:-1;;;1368:75:6;;12446:2:16;1368:75:6;;;12428:21:16;12485:2;12465:18;;;12458:30;12524:34;12504:18;;;12497:62;-1:-1:-1;;;12575:18:16;;;12568:44;12629:19;;1368:75:6;12244:410:16;1368:75:6;1453:19;;;;:10;:19;;;;;;;;:31;;;;;;;;:::i;10324:560:3:-;10478:4;-1:-1:-1;;;;;10451:31:3;:23;10466:7;10451:14;:23::i;:::-;-1:-1:-1;;;;;10451:31:3;;10443:85;;;;-1:-1:-1;;;10443:85:3;;12861:2:16;10443:85:3;;;12843:21:16;12900:2;12880:18;;;12873:30;12939:34;12919:18;;;12912:62;-1:-1:-1;;;12990:18:16;;;12983:39;13039:19;;10443:85:3;12659:405:16;10443:85:3;-1:-1:-1;;;;;10546:16:3;;10538:65;;;;-1:-1:-1;;;10538:65:3;;13271:2:16;10538:65:3;;;13253:21:16;13310:2;13290:18;;;13283:30;13349:34;13329:18;;;13322:62;-1:-1:-1;;;13400:18:16;;;13393:34;13444:19;;10538:65:3;13069:400:16;10538:65:3;10715:29;10732:1;10736:7;10715:8;:29::i;:::-;-1:-1:-1;;;;;10755:15:3;;;;;;:9;:15;;;;;:20;;10774:1;;10755:15;:20;;10774:1;;10755:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10785:13:3;;;;;;:9;:13;;;;;:18;;10802:1;;10785:13;:18;;10802:1;;10785:18;:::i;:::-;;;;-1:-1:-1;;10813:16:3;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10813:21:3;-1:-1:-1;;;;;10813:21:3;;;;;;;;;10850:27;;10813:16;;10850:27;;;;;;;10324:560;;;:::o;7427:344::-;7520:4;7544:16;7552:7;7544;:16::i;:::-;7536:73;;;;-1:-1:-1;;;7536:73:3;;13806:2:16;7536:73:3;;;13788:21:16;13845:2;13825:18;;;13818:30;13884:34;13864:18;;;13857:62;-1:-1:-1;;;13935:18:16;;;13928:42;13987:19;;7536:73:3;13604:408:16;7536:73:3;7619:13;7635:23;7650:7;7635:14;:23::i;:::-;7619:39;;7687:5;-1:-1:-1;;;;;7676:16:3;:7;-1:-1:-1;;;;;7676:16:3;;:51;;;;7720:7;-1:-1:-1;;;;;7696:31:3;:20;7708:7;7696:11;:20::i;:::-;-1:-1:-1;;;;;7696:31:3;;7676:51;:87;;;-1:-1:-1;;;;;;4607:25:3;;;4584:4;4607:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7731:32;4487:162;3312:484:1;3392:22;3400:4;3406:7;3392;:22::i;:::-;3387:403;;3575:41;3603:7;-1:-1:-1;;;;;3575:41:1;3613:2;3575:19;:41::i;:::-;3687:38;3715:4;3722:2;3687:19;:38::i;:::-;3482:265;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3482:265:1;;;;;;;;;;-1:-1:-1;;;3430:349:1;;;;;;;:::i;6822:233::-;6905:22;6913:4;6919:7;6905;:22::i;:::-;6900:149;;6943:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6943:29:1;;;;;;;;;:36;;-1:-1:-1;;6943:36:1;6975:4;6943:36;;;7025:12;719:10:9;;640:96;7025:12:1;-1:-1:-1;;;;;6998:40:1;7016:7;-1:-1:-1;;;;;6998:40:1;7010:4;6998:40;;;;;;;;;;6822:233;;:::o;7180:234::-;7263:22;7271:4;7277:7;7263;:22::i;:::-;7259:149;;;7333:5;7301:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7301:29:1;;;;;;;;;;:37;;-1:-1:-1;;7301:37:1;;;7357:40;719:10:9;;7301:12:1;;7357:40;;7333:5;7357:40;7180:234;;:::o;11301:307:3:-;11451:8;-1:-1:-1;;;;;11442:17:3;:5;-1:-1:-1;;;;;11442:17:3;;;11434:55;;;;-1:-1:-1;;;11434:55:3;;15010:2:16;11434:55:3;;;14992:21:16;15049:2;15029:18;;;15022:30;15088:27;15068:18;;;15061:55;15133:18;;11434:55:3;14808:349:16;11434:55:3;-1:-1:-1;;;;;11499:25:3;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11499:46:3;;;;;;;;;;11560:41;;540::16;;;11560::3;;513:18:16;11560:41:3;;;;;;;11301:307;;;:::o;6534:::-;6685:28;6695:4;6701:2;6705:7;6685:9;:28::i;:::-;6731:48;6754:4;6760:2;6764:7;6773:5;6731:22;:48::i;:::-;6723:111;;;;-1:-1:-1;;;6723:111:3;;;;;;;:::i;2803:329::-;2876:13;2909:16;2917:7;2909;:16::i;:::-;2901:76;;;;-1:-1:-1;;;2901:76:3;;15783:2:16;2901:76:3;;;15765:21:16;15822:2;15802:18;;;15795:30;15861:34;15841:18;;;15834:62;-1:-1:-1;;;15912:18:16;;;15905:45;15967:19;;2901:76:3;15581:411:16;2901:76:3;2988:21;3012:10;3449:9;;;;;;;;;-1:-1:-1;3449:9:3;;;3373:92;3012:10;2988:34;;3063:1;3045:7;3039:21;:25;:86;;;;;;;;;;;;;;;;;3091:7;3100:18;:7;:16;:18::i;:::-;3074:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3039:86;3032:93;2803:329;-1:-1:-1;;;2803:329:3:o;3391:555:0:-;3482:7;3524:415;3625:122;3773:15;;3814:16;;;;3872:11;;;;3773:7;3872:11;:::i;:::-;3856:29;;;;;;;:::i;:::-;;;;;;;;;3589:318;;;;;;;16504:25:16;;;16560:2;16545:18;;16538:34;;;;16603:2;16588:18;;16581:34;16646:2;16631:18;;16624:34;16491:3;16476:19;;16273:391;3589:318:0;;;;;;;;;;;;;3558:367;;;;;;3524:16;:415::i;4293:227:11:-;4371:7;4391:17;4410:18;4432:27;4443:4;4449:9;4432:10;:27::i;:::-;4390:69;;;;4469:18;4481:5;4469:11;:18::i;:::-;-1:-1:-1;4504:9:11;4293:227;-1:-1:-1;;;4293:227:11:o;1588:441:10:-;1663:13;1688:19;1720:10;1724:6;1720:1;:10;:::i;:::-;:14;;1733:1;1720:14;:::i;:::-;1710:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1710:25:10;;1688:47;;-1:-1:-1;;;1745:6:10;1752:1;1745:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1745:15:10;;;;;;;;;-1:-1:-1;;;1770:6:10;1777:1;1770:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1770:15:10;;;;;;;;-1:-1:-1;1800:9:10;1812:10;1816:6;1812:1;:10;:::i;:::-;:14;;1825:1;1812:14;:::i;:::-;1800:26;;1795:132;1832:1;1828;:5;1795:132;;;-1:-1:-1;;;1879:5:10;1887:3;1879:11;1866:25;;;;;;;:::i;:::-;;;;1854:6;1861:1;1854:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1854:37:10;;;;;;;;-1:-1:-1;1915:1:10;1905:11;;;;;1835:3;;;:::i;:::-;;;1795:132;;;-1:-1:-1;1944:10:10;;1936:55;;;;-1:-1:-1;;;1936:55:10;;17702:2:16;1936:55:10;;;17684:21:16;;;17721:18;;;17714:30;17780:34;17760:18;;;17753:62;17832:18;;1936:55:10;17500:356:16;12161:778:3;12311:4;-1:-1:-1;;;;;12331:13:3;;1087:20:8;1133:8;12327:606:3;;12366:72;;-1:-1:-1;;;12366:72:3;;-1:-1:-1;;;;;12366:36:3;;;;;:72;;719:10:9;;12417:4:3;;12423:7;;12432:5;;12366:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12366:72:3;;;;;;;;-1:-1:-1;;12366:72:3;;;;;;;;;;;;:::i;:::-;;;12362:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12605:13:3;;12601:266;;12647:60;;-1:-1:-1;;;12647:60:3;;;;;;;:::i;12601:266::-;12819:6;12813:13;12804:6;12800:2;12796:15;12789:38;12362:519;-1:-1:-1;;;;;;12488:51:3;-1:-1:-1;;;12488:51:3;;-1:-1:-1;12481:58:3;;12327:606;-1:-1:-1;12918:4:3;12161:778;;;;;;:::o;328:703:10:-;384:13;601:10;597:51;;-1:-1:-1;;627:10:10;;;;;;;;;;;;-1:-1:-1;;;627:10:10;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:10;;-1:-1:-1;773:2:10;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:10;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:10;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:10;;;;;;;;-1:-1:-1;972:11:10;981:2;972:11;;:::i;:::-;;;844:150;;4339:165:12;4416:7;4442:55;4464:20;:18;:20::i;:::-;4486:10;9254:57:11;;-1:-1:-1;;;9254:57:11;;;21032:27:16;21075:11;;;21068:27;;;21111:12;;;21104:28;;;9218:7:11;;21148:12:16;;9254:57:11;;;;;;;;;;;;9244:68;;;;;;9237:75;;9125:194;;;;;2228:1279;2309:7;2318:12;2539:9;:16;2559:2;2539:22;2535:966;;;2828:4;2813:20;;2807:27;2877:4;2862:20;;2856:27;2934:4;2919:20;;2913:27;2577:9;2905:36;2975:25;2986:4;2905:36;2807:27;2856;2975:10;:25::i;:::-;2968:32;;;;;;;;;2535:966;3021:9;:16;3041:2;3021:22;3017:484;;;3290:4;3275:20;;3269:27;3340:4;3325:20;;3319:27;3380:23;3391:4;3269:27;3319;3380:10;:23::i;:::-;3373:30;;;;;;;;3017:484;-1:-1:-1;3450:1:11;;-1:-1:-1;3454:35:11;3017:484;2228:1279;;;;;:::o;533:631::-;610:20;601:5;:29;;;;;;;;:::i;:::-;;597:561;;;533:631;:::o;597:561::-;706:29;697:5;:38;;;;;;;;:::i;:::-;;693:465;;;751:34;;-1:-1:-1;;;751:34:11;;19457:2:16;751:34:11;;;19439:21:16;19496:2;19476:18;;;19469:30;19535:26;19515:18;;;19508:54;19579:18;;751:34:11;19255:348:16;693:465:11;815:35;806:5;:44;;;;;;;;:::i;:::-;;802:356;;;866:41;;-1:-1:-1;;;866:41:11;;19810:2:16;866:41:11;;;19792:21:16;19849:2;19829:18;;;19822:30;19888:33;19868:18;;;19861:61;19939:18;;866:41:11;19608:355:16;802:356:11;937:30;928:5;:39;;;;;;;;:::i;:::-;;924:234;;;983:44;;-1:-1:-1;;;983:44:11;;20170:2:16;983:44:11;;;20152:21:16;20209:2;20189:18;;;20182:30;20248:34;20228:18;;;20221:62;-1:-1:-1;;;20299:18:16;;;20292:32;20341:19;;983:44:11;19968:398:16;924:234:11;1057:30;1048:5;:39;;;;;;;;:::i;:::-;;1044:114;;;1103:44;;-1:-1:-1;;;1103:44:11;;20573:2:16;1103:44:11;;;20555:21:16;20612:2;20592:18;;;20585:30;20651:34;20631:18;;;20624:62;-1:-1:-1;;;20702:18:16;;;20695:32;20744:19;;1103:44:11;20371:398:16;1044:114:11;533:631;:::o;3143:308:12:-;3196:7;3227:4;-1:-1:-1;;;;;3236:12:12;3219:29;;:66;;;;;3269:16;3252:13;:33;3219:66;3215:230;;;-1:-1:-1;3308:24:12;;3143:308::o;3215:230::-;-1:-1:-1;3633:73:12;;;3392:10;3633:73;;;;21833:25:16;;;;3404:12:12;21874:18:16;;;21867:34;3418:15:12;21917:18:16;;;21910:34;3677:13:12;21960:18:16;;;21953:34;3700:4:12;22003:19:16;;;;21996:61;;;;3633:73:12;;;;;;;;;;21805:19:16;;;;3633:73:12;;;3623:84;;;;;;3143:308::o;5744:1603:11:-;5870:7;;6794:66;6781:79;;6777:161;;;-1:-1:-1;6892:1:11;;-1:-1:-1;6896:30:11;6876:51;;6777:161;6951:1;:7;;6956:2;6951:7;;:18;;;;;6962:1;:7;;6967:2;6962:7;;6951:18;6947:100;;;-1:-1:-1;7001:1:11;;-1:-1:-1;7005:30:11;6985:51;;6947:100;7158:24;;;7141:14;7158:24;;;;;;;;;21398:25:16;;;21471:4;21459:17;;21439:18;;;21432:45;;;;21493:18;;;21486:34;;;21536:18;;;21529:34;;;7158:24:11;;21370:19:16;;7158:24:11;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7158:24:11;;-1:-1:-1;;7158:24:11;;;-1:-1:-1;;;;;;;7196:20:11;;7192:101;;7248:1;7252:29;7232:50;;;;;;;7192:101;7311:6;-1:-1:-1;7319:20:11;;-1:-1:-1;5744:1603:11;;;;;;;;:::o;4774:379::-;4884:7;;-1:-1:-1;;;;;4981:75:11;;5082:3;5078:12;;;5092:2;5074:21;5121:25;5132:4;5074:21;5141:1;4981:75;5121:10;:25::i;:::-;5114:32;;;;;;4774:379;;;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:16;-1:-1:-1;;;;;;88:32:16;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:16;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:16;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:16:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:16;;1343:180;-1:-1:-1;1343:180:16:o;1736:173::-;1804:20;;-1:-1:-1;;;;;1853:31:16;;1843:42;;1833:70;;1899:1;1896;1889:12;1833:70;1736:173;;;:::o;1914:254::-;1982:6;1990;2043:2;2031:9;2022:7;2018:23;2014:32;2011:52;;;2059:1;2056;2049:12;2011:52;2082:29;2101:9;2082:29;:::i;:::-;2072:39;2158:2;2143:18;;;;2130:32;;-1:-1:-1;;;1914:254:16:o;2173:127::-;2234:10;2229:3;2225:20;2222:1;2215:31;2265:4;2262:1;2255:15;2289:4;2286:1;2279:15;2305:718;2347:5;2400:3;2393:4;2385:6;2381:17;2377:27;2367:55;;2418:1;2415;2408:12;2367:55;2454:6;2441:20;2480:18;2517:2;2513;2510:10;2507:36;;;2523:18;;:::i;:::-;2598:2;2592:9;2566:2;2652:13;;-1:-1:-1;;2648:22:16;;;2672:2;2644:31;2640:40;2628:53;;;2696:18;;;2716:22;;;2693:46;2690:72;;;2742:18;;:::i;:::-;2782:10;2778:2;2771:22;2817:2;2809:6;2802:18;2863:3;2856:4;2851:2;2843:6;2839:15;2835:26;2832:35;2829:55;;;2880:1;2877;2870:12;2829:55;2944:2;2937:4;2929:6;2925:17;2918:4;2910:6;2906:17;2893:54;2991:1;2984:4;2979:2;2971:6;2967:15;2963:26;2956:37;3011:6;3002:15;;;;;;2305:718;;;;:::o;3028:680::-;3142:6;3150;3158;3211:2;3199:9;3190:7;3186:23;3182:32;3179:52;;;3227:1;3224;3217:12;3179:52;3250:29;3269:9;3250:29;:::i;:::-;3240:39;;3330:2;3319:9;3315:18;3302:32;3353:18;3394:2;3386:6;3383:14;3380:34;;;3410:1;3407;3400:12;3380:34;3433:22;;;;3489:2;3471:16;;;3467:25;3464:45;;;3505:1;3502;3495:12;3464:45;3528:2;;-1:-1:-1;3583:2:16;3568:18;;3555:32;;3599:16;;;3596:36;;;3628:1;3625;3618:12;3596:36;;3651:51;3694:7;3683:8;3672:9;3668:24;3651:51;:::i;:::-;3641:61;;;3028:680;;;;;:::o;3895:328::-;3972:6;3980;3988;4041:2;4029:9;4020:7;4016:23;4012:32;4009:52;;;4057:1;4054;4047:12;4009:52;4080:29;4099:9;4080:29;:::i;:::-;4070:39;;4128:38;4162:2;4151:9;4147:18;4128:38;:::i;:::-;4118:48;;4213:2;4202:9;4198:18;4185:32;4175:42;;3895:328;;;;;:::o;4595:254::-;4663:6;4671;4724:2;4712:9;4703:7;4699:23;4695:32;4692:52;;;4740:1;4737;4730:12;4692:52;4776:9;4763:23;4753:33;;4805:38;4839:2;4828:9;4824:18;4805:38;:::i;:::-;4795:48;;4595:254;;;;;:::o;4854:186::-;4913:6;4966:2;4954:9;4945:7;4941:23;4937:32;4934:52;;;4982:1;4979;4972:12;4934:52;5005:29;5024:9;5005:29;:::i;5045:347::-;5110:6;5118;5171:2;5159:9;5150:7;5146:23;5142:32;5139:52;;;5187:1;5184;5177:12;5139:52;5210:29;5229:9;5210:29;:::i;:::-;5200:39;;5289:2;5278:9;5274:18;5261:32;5336:5;5329:13;5322:21;5315:5;5312:32;5302:60;;5358:1;5355;5348:12;5302:60;5381:5;5371:15;;;5045:347;;;;;:::o;5397:537::-;5492:6;5500;5508;5516;5569:3;5557:9;5548:7;5544:23;5540:33;5537:53;;;5586:1;5583;5576:12;5537:53;5609:29;5628:9;5609:29;:::i;:::-;5599:39;;5657:38;5691:2;5680:9;5676:18;5657:38;:::i;:::-;5647:48;;5742:2;5731:9;5727:18;5714:32;5704:42;;5797:2;5786:9;5782:18;5769:32;5824:18;5816:6;5813:30;5810:50;;;5856:1;5853;5846:12;5810:50;5879:49;5920:7;5911:6;5900:9;5896:22;5879:49;:::i;:::-;5869:59;;;5397:537;;;;;;;:::o;5939:260::-;6007:6;6015;6068:2;6056:9;6047:7;6043:23;6039:32;6036:52;;;6084:1;6081;6074:12;6036:52;6107:29;6126:9;6107:29;:::i;:::-;6097:39;;6155:38;6189:2;6178:9;6174:18;6155:38;:::i;6204:380::-;6283:1;6279:12;;;;6326;;;6347:61;;6401:4;6393:6;6389:17;6379:27;;6347:61;6454:2;6446:6;6443:14;6423:18;6420:38;6417:161;;;6500:10;6495:3;6491:20;6488:1;6481:31;6535:4;6532:1;6525:15;6563:4;6560:1;6553:15;6417:161;;6204:380;;;:::o;8186:522::-;8264:4;8270:6;8330:11;8317:25;8424:2;8420:7;8409:8;8393:14;8389:29;8385:43;8365:18;8361:68;8351:96;;8443:1;8440;8433:12;8351:96;8470:33;;8522:20;;;-1:-1:-1;8565:18:16;8554:30;;8551:50;;;8597:1;8594;8587:12;8551:50;8630:4;8618:17;;-1:-1:-1;8661:14:16;8657:27;;;8647:38;;8644:58;;;8698:1;8695;8688:12;8713:127;8774:10;8769:3;8765:20;8762:1;8755:31;8805:4;8802:1;8795:15;8829:4;8826:1;8819:15;8845:128;8885:3;8916:1;8912:6;8909:1;8906:13;8903:39;;;8922:18;;:::i;:::-;-1:-1:-1;8958:9:16;;8845:128::o;8978:413::-;9180:2;9162:21;;;9219:2;9199:18;;;9192:30;9258:34;9253:2;9238:18;;9231:62;-1:-1:-1;;;9324:2:16;9309:18;;9302:47;9381:3;9366:19;;8978:413::o;11051:470::-;11230:3;11268:6;11262:13;11284:53;11330:6;11325:3;11318:4;11310:6;11306:17;11284:53;:::i;:::-;11400:13;;11359:16;;;;11422:57;11400:13;11359:16;11456:4;11444:17;;11422:57;:::i;:::-;11495:20;;11051:470;-1:-1:-1;;;;11051:470:16:o;13474:125::-;13514:4;13542:1;13539;13536:8;13533:34;;;13547:18;;:::i;:::-;-1:-1:-1;13584:9:16;;13474:125::o;14017:786::-;14428:25;14423:3;14416:38;14398:3;14483:6;14477:13;14499:62;14554:6;14549:2;14544:3;14540:12;14533:4;14525:6;14521:17;14499:62;:::i;:::-;-1:-1:-1;;;14620:2:16;14580:16;;;14612:11;;;14605:40;14670:13;;14692:63;14670:13;14741:2;14733:11;;14726:4;14714:17;;14692:63;:::i;:::-;14775:17;14794:2;14771:26;;14017:786;-1:-1:-1;;;;14017:786:16:o;15162:414::-;15364:2;15346:21;;;15403:2;15383:18;;;15376:30;15442:34;15437:2;15422:18;;15415:62;-1:-1:-1;;;15508:2:16;15493:18;;15486:48;15566:3;15551:19;;15162:414::o;15997:271::-;16180:6;16172;16167:3;16154:33;16136:3;16206:16;;16231:13;;;16206:16;15997:271;-1:-1:-1;15997:271:16:o;17054:168::-;17094:7;17160:1;17156;17152:6;17148:14;17145:1;17142:21;17137:1;17130:9;17123:17;17119:45;17116:71;;;17167:18;;:::i;:::-;-1:-1:-1;17207:9:16;;17054:168::o;17227:127::-;17288:10;17283:3;17279:20;17276:1;17269:31;17319:4;17316:1;17309:15;17343:4;17340:1;17333:15;17359:136;17398:3;17426:5;17416:39;;17435:18;;:::i;:::-;-1:-1:-1;;;17471:18:16;;17359:136::o;17861:489::-;-1:-1:-1;;;;;18130:15:16;;;18112:34;;18182:15;;18177:2;18162:18;;18155:43;18229:2;18214:18;;18207:34;;;18277:3;18272:2;18257:18;;18250:31;;;18055:4;;18298:46;;18324:19;;18316:6;18298:46;:::i;:::-;18290:54;17861:489;-1:-1:-1;;;;;;17861:489:16:o;18355:249::-;18424:6;18477:2;18465:9;18456:7;18452:23;18448:32;18445:52;;;18493:1;18490;18483:12;18445:52;18525:9;18519:16;18544:30;18568:5;18544:30;:::i;18609:135::-;18648:3;-1:-1:-1;;18669:17:16;;18666:43;;;18689:18;;:::i;:::-;-1:-1:-1;18736:1:16;18725:13;;18609:135::o;18749:127::-;18810:10;18805:3;18801:20;18798:1;18791:31;18841:4;18838:1;18831:15;18865:4;18862:1;18855:15;18881:120;18921:1;18947;18937:35;;18952:18;;:::i;:::-;-1:-1:-1;18986:9:16;;18881:120::o;19006:112::-;19038:1;19064;19054:35;;19069:18;;:::i;:::-;-1:-1:-1;19103:9:16;;19006:112::o;19123:127::-;19184:10;19179:3;19175:20;19172:1;19165:31;19215:4;19212:1;19205:15;19239:4;19236:1;19229:15",
    "sourcePath": "/home/faeze/workspace2/polygon-ethereum-nextjs-marketplace/contracts/Lazy.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.12+commit.f00d7308"
    },
    "ast": {
        "absolutePath": "/home/faeze/workspace2/polygon-ethereum-nextjs-marketplace/contracts/Lazy.sol",
        "exportedSymbols": {
            "AccessControl": [
                536
            ],
            "Address": [
                2026
            ],
            "Context": [
                2048
            ],
            "ECDSA": [
                2641
            ],
            "EIP712": [
                2795
            ],
            "ERC165": [
                2819
            ],
            "ERC721": [
                1440
            ],
            "ERC721URIStorage": [
                1702
            ],
            "IAccessControl": [
                609
            ],
            "IERC165": [
                2831
            ],
            "IERC721": [
                1556
            ],
            "IERC721Metadata": [
                1729
            ],
            "IERC721Receiver": [
                1574
            ],
            "Lazy": [
                227
            ],
            "Strings": [
                2251
            ],
            "console": [
                10895
            ]
        },
        "id": 228,
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "0:23:0"
            },
            {
                "id": 2,
                "literals": [
                    "experimental",
                    "ABIEncoderV2"
                ],
                "nodeType": "PragmaDirective",
                "src": "24:33:0"
            },
            {
                "absolutePath": "/home/faeze/workspace2/polygon-ethereum-nextjs-marketplace/node_modules/hardhat/console.sol",
                "file": "/home/faeze/workspace2/polygon-ethereum-nextjs-marketplace/node_modules/hardhat/console.sol",
                "id": 3,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 228,
                "sourceUnit": 10896,
                "src": "59:101:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/home/faeze/workspace2/polygon-ethereum-nextjs-marketplace/node_modules/@openzeppelin/contracts/access/AccessControl.sol",
                "file": "/home/faeze/workspace2/polygon-ethereum-nextjs-marketplace/node_modules/@openzeppelin/contracts/access/AccessControl.sol",
                "id": 4,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 228,
                "sourceUnit": 537,
                "src": "161:130:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/home/faeze/workspace2/polygon-ethereum-nextjs-marketplace/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                "file": "/home/faeze/workspace2/polygon-ethereum-nextjs-marketplace/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                "id": 5,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 228,
                "sourceUnit": 1441,
                "src": "292:129:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/home/faeze/workspace2/polygon-ethereum-nextjs-marketplace/node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
                "file": "/home/faeze/workspace2/polygon-ethereum-nextjs-marketplace/node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
                "id": 6,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 228,
                "sourceUnit": 1703,
                "src": "422:150:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/home/faeze/workspace2/polygon-ethereum-nextjs-marketplace/node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
                "file": "/home/faeze/workspace2/polygon-ethereum-nextjs-marketplace/node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
                "id": 7,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 228,
                "sourceUnit": 2642,
                "src": "573:134:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/home/faeze/workspace2/polygon-ethereum-nextjs-marketplace/node_modules/@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol",
                "file": "/home/faeze/workspace2/polygon-ethereum-nextjs-marketplace/node_modules/@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol",
                "id": 8,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 228,
                "sourceUnit": 2796,
                "src": "708:141:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 9,
                            "name": "ERC721URIStorage",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1702,
                            "src": "868:16:0"
                        },
                        "id": 10,
                        "nodeType": "InheritanceSpecifier",
                        "src": "868:16:0"
                    },
                    {
                        "baseName": {
                            "id": 11,
                            "name": "EIP712",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2795,
                            "src": "886:6:0"
                        },
                        "id": 12,
                        "nodeType": "InheritanceSpecifier",
                        "src": "886:6:0"
                    },
                    {
                        "baseName": {
                            "id": 13,
                            "name": "AccessControl",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 536,
                            "src": "894:13:0"
                        },
                        "id": 14,
                        "nodeType": "InheritanceSpecifier",
                        "src": "894:13:0"
                    }
                ],
                "canonicalName": "Lazy",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 227,
                "linearizedBaseContracts": [
                    227,
                    536,
                    2795,
                    1702,
                    1440,
                    1729,
                    1556,
                    2819,
                    2831,
                    609,
                    2048
                ],
                "name": "Lazy",
                "nameLocation": "860:4:0",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "id": 17,
                        "libraryName": {
                            "id": 15,
                            "name": "ECDSA",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2641,
                            "src": "920:5:0"
                        },
                        "nodeType": "UsingForDirective",
                        "src": "914:24:0",
                        "typeName": {
                            "id": 16,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "930:7:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                            }
                        }
                    },
                    {
                        "constant": true,
                        "functionSelector": "d5391393",
                        "id": 22,
                        "mutability": "constant",
                        "name": "MINTER_ROLE",
                        "nameLocation": "968:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 227,
                        "src": "944:62:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                        },
                        "typeName": {
                            "id": 18,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "944:7:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                            }
                        },
                        "value": {
                            "arguments": [
                                {
                                    "hexValue": "4d494e5445525f524f4c45",
                                    "id": 20,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "992:13:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                                        "typeString": "literal_string \"MINTER_ROLE\""
                                    },
                                    "value": "MINTER_ROLE"
                                }
                            ],
                            "expression": {
                                "argumentTypes": [
                                    {
                                        "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                                        "typeString": "literal_string \"MINTER_ROLE\""
                                    }
                                ],
                                "id": 19,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967288,
                                "src": "982:9:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                            },
                            "id": 21,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "982:24:0",
                            "tryCall": false,
                            "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "id": 26,
                        "mutability": "mutable",
                        "name": "pendingWithdrawals",
                        "nameLocation": "1041:18:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 227,
                        "src": "1013:46:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                        },
                        "typeName": {
                            "id": 25,
                            "keyType": {
                                "id": 23,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1021:7:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                }
                            },
                            "nodeType": "Mapping",
                            "src": "1013:27:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                            },
                            "valueType": {
                                "id": 24,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1032:7:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                }
                            }
                        },
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 37,
                            "nodeType": "Block",
                            "src": "1129:2:0",
                            "statements": []
                        },
                        "id": 38,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "hexValue": "4c617a794e4654",
                                        "id": 29,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1087:9:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_bf3052008f16d282961f11ca872ab4622c4fedf08cb3271264cb49969a46be40",
                                            "typeString": "literal_string \"LazyNFT\""
                                        },
                                        "value": "LazyNFT"
                                    },
                                    {
                                        "hexValue": "4c415a",
                                        "id": 30,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1098:5:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_f4af9275df6d58a16311655a7372989eff656f69b10ff4da316ee6204897a51d",
                                            "typeString": "literal_string \"LAZ\""
                                        },
                                        "value": "LAZ"
                                    }
                                ],
                                "id": 31,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 28,
                                    "name": "ERC721",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1440,
                                    "src": "1080:6:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1080:24:0"
                            },
                            {
                                "arguments": [
                                    {
                                        "hexValue": "4e616d65",
                                        "id": 33,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1112:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_55e49609591f684ecf6f2909c9e20c2439b990887b9c3fe108b154c9077d85cf",
                                            "typeString": "literal_string \"Name\""
                                        },
                                        "value": "Name"
                                    },
                                    {
                                        "hexValue": "312e302e30",
                                        "id": 34,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1120:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c",
                                            "typeString": "literal_string \"1.0.0\""
                                        },
                                        "value": "1.0.0"
                                    }
                                ],
                                "id": 35,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 32,
                                    "name": "EIP712",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 2795,
                                    "src": "1105:6:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1105:23:0"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 27,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1077:2:0"
                        },
                        "returnParameters": {
                            "id": 36,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1129:0:0"
                        },
                        "scope": 227,
                        "src": "1066:65:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "canonicalName": "Lazy.NFTVoucher",
                        "id": 48,
                        "members": [
                            {
                                "constant": false,
                                "id": 41,
                                "mutability": "mutable",
                                "name": "tokenId",
                                "nameLocation": "1498:7:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 48,
                                "src": "1490:15:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 40,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1490:7:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "visibility": "internal"
                            },
                            {
                                "constant": false,
                                "id": 44,
                                "mutability": "mutable",
                                "name": "minPrice",
                                "nameLocation": "1646:8:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 48,
                                "src": "1638:16:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 43,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1638:7:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "visibility": "internal"
                            },
                            {
                                "constant": false,
                                "id": 47,
                                "mutability": "mutable",
                                "name": "uri",
                                "nameLocation": "1738:3:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 48,
                                "src": "1731:10:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage_ptr",
                                    "typeString": "string"
                                },
                                "typeName": {
                                    "id": 46,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1731:6:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_storage_ptr",
                                        "typeString": "string"
                                    }
                                },
                                "visibility": "internal"
                            }
                        ],
                        "name": "NFTVoucher",
                        "nameLocation": "1317:10:0",
                        "nodeType": "StructDefinition",
                        "scope": 227,
                        "src": "1310:438:0",
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 106,
                            "nodeType": "Block",
                            "src": "1904:779:0",
                            "statements": [
                                {
                                    "assignments": [
                                        61
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 61,
                                            "mutability": "mutable",
                                            "name": "signer",
                                            "nameLocation": "1996:6:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 106,
                                            "src": "1988:14:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 60,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1988:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 66,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "id": 63,
                                                "name": "voucher",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 53,
                                                "src": "2013:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_NFTVoucher_$48_calldata_ptr",
                                                    "typeString": "struct Lazy.NFTVoucher calldata"
                                                }
                                            },
                                            {
                                                "id": 64,
                                                "name": "signature",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 55,
                                                "src": "2022:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_struct$_NFTVoucher_$48_calldata_ptr",
                                                    "typeString": "struct Lazy.NFTVoucher calldata"
                                                },
                                                {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            ],
                                            "id": 62,
                                            "name": "_verify",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 205,
                                            "src": "2005:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_struct$_NFTVoucher_$48_calldata_ptr_$_t_bytes_memory_ptr_$returns$_t_address_$",
                                                "typeString": "function (struct Lazy.NFTVoucher calldata,bytes memory) view returns (address)"
                                            }
                                        },
                                        "id": 65,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2005:27:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1988:44:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 72,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 68,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "2198:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 69,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "value",
                                                    "nodeType": "MemberAccess",
                                                    "src": "2198:9:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": ">=",
                                                "rightExpression": {
                                                    "expression": {
                                                        "id": 70,
                                                        "name": "voucher",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 53,
                                                        "src": "2211:7:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_NFTVoucher_$48_calldata_ptr",
                                                            "typeString": "struct Lazy.NFTVoucher calldata"
                                                        }
                                                    },
                                                    "id": 71,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "minPrice",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 44,
                                                    "src": "2211:16:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "2198:29:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "496e73756666696369656e742066756e647320746f2072656465656d",
                                                "id": 73,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2229:30:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_89ba119abf2ed41a64a62537192f9dc364f9a9eaf4eea3973747d768b32755bb",
                                                    "typeString": "literal_string \"Insufficient funds to redeem\""
                                                },
                                                "value": "Insufficient funds to redeem"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_89ba119abf2ed41a64a62537192f9dc364f9a9eaf4eea3973747d768b32755bb",
                                                    "typeString": "literal_string \"Insufficient funds to redeem\""
                                                }
                                            ],
                                            "id": 67,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "2190:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 74,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2190:70:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 75,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2190:70:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 77,
                                                "name": "signer",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 61,
                                                "src": "2359:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "expression": {
                                                    "id": 78,
                                                    "name": "voucher",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 53,
                                                    "src": "2367:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_NFTVoucher_$48_calldata_ptr",
                                                        "typeString": "struct Lazy.NFTVoucher calldata"
                                                    }
                                                },
                                                "id": 79,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "tokenId",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 41,
                                                "src": "2367:15:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 76,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1190,
                                            "src": "2353:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 80,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2353:30:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 81,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2353:30:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 83,
                                                    "name": "voucher",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 53,
                                                    "src": "2406:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_NFTVoucher_$48_calldata_ptr",
                                                        "typeString": "struct Lazy.NFTVoucher calldata"
                                                    }
                                                },
                                                "id": 84,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "tokenId",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 41,
                                                "src": "2406:15:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            {
                                                "expression": {
                                                    "id": 85,
                                                    "name": "voucher",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 53,
                                                    "src": "2423:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_NFTVoucher_$48_calldata_ptr",
                                                        "typeString": "struct Lazy.NFTVoucher calldata"
                                                    }
                                                },
                                                "id": 86,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "uri",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 47,
                                                "src": "2423:11:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_calldata_ptr",
                                                    "typeString": "string calldata"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                {
                                                    "typeIdentifier": "t_string_calldata_ptr",
                                                    "typeString": "string calldata"
                                                }
                                            ],
                                            "id": 82,
                                            "name": "_setTokenURI",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1671,
                                            "src": "2393:12:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (uint256,string memory)"
                                            }
                                        },
                                        "id": 87,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2393:42:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 88,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2393:42:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 90,
                                                "name": "signer",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 61,
                                                "src": "2502:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 91,
                                                "name": "redeemer",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 50,
                                                "src": "2510:8:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "expression": {
                                                    "id": 92,
                                                    "name": "voucher",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 53,
                                                    "src": "2520:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_NFTVoucher_$48_calldata_ptr",
                                                        "typeString": "struct Lazy.NFTVoucher calldata"
                                                    }
                                                },
                                                "id": 93,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "tokenId",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 41,
                                                "src": "2520:15:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 89,
                                            "name": "_transfer",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1310,
                                            "src": "2492:9:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,address,uint256)"
                                            }
                                        },
                                        "id": 94,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2492:44:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 95,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2492:44:0"
                                },
                                {
                                    "expression": {
                                        "id": 101,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "baseExpression": {
                                                "id": 96,
                                                "name": "pendingWithdrawals",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 26,
                                                "src": "2604:18:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                    "typeString": "mapping(address => uint256)"
                                                }
                                            },
                                            "id": 98,
                                            "indexExpression": {
                                                "id": 97,
                                                "name": "signer",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 61,
                                                "src": "2623:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "2604:26:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "+=",
                                        "rightHandSide": {
                                            "expression": {
                                                "id": 99,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967281,
                                                "src": "2634:3:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                }
                                            },
                                            "id": 100,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "value",
                                            "nodeType": "MemberAccess",
                                            "src": "2634:9:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "2604:39:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 102,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2604:39:0"
                                },
                                {
                                    "expression": {
                                        "expression": {
                                            "id": 103,
                                            "name": "voucher",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 53,
                                            "src": "2661:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_NFTVoucher_$48_calldata_ptr",
                                                "typeString": "struct Lazy.NFTVoucher calldata"
                                            }
                                        },
                                        "id": 104,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "tokenId",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 41,
                                        "src": "2661:15:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "functionReturnParameters": 59,
                                    "id": 105,
                                    "nodeType": "Return",
                                    "src": "2654:22:0"
                                }
                            ]
                        },
                        "functionSelector": "1c098e90",
                        "id": 107,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "redeem",
                        "nameLocation": "1763:6:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 56,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 50,
                                    "mutability": "mutable",
                                    "name": "redeemer",
                                    "nameLocation": "1787:8:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 107,
                                    "src": "1779:16:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 49,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1779:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 53,
                                    "mutability": "mutable",
                                    "name": "voucher",
                                    "nameLocation": "1825:7:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 107,
                                    "src": "1805:27:0",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_NFTVoucher_$48_calldata_ptr",
                                        "typeString": "struct Lazy.NFTVoucher"
                                    },
                                    "typeName": {
                                        "id": 52,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 51,
                                            "name": "NFTVoucher",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 48,
                                            "src": "1805:10:0"
                                        },
                                        "referencedDeclaration": 48,
                                        "src": "1805:10:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_NFTVoucher_$48_storage_ptr",
                                            "typeString": "struct Lazy.NFTVoucher"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 55,
                                    "mutability": "mutable",
                                    "name": "signature",
                                    "nameLocation": "1855:9:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 107,
                                    "src": "1842:22:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes"
                                    },
                                    "typeName": {
                                        "id": 54,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1842:5:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage_ptr",
                                            "typeString": "bytes"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1769:101:0"
                        },
                        "returnParameters": {
                            "id": 59,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 58,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 107,
                                    "src": "1895:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 57,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1895:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1894:9:0"
                        },
                        "scope": 227,
                        "src": "1754:929:0",
                        "stateMutability": "payable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 136,
                            "nodeType": "Block",
                            "src": "2716:398:0",
                            "statements": [
                                {
                                    "assignments": [
                                        111
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 111,
                                            "mutability": "mutable",
                                            "name": "receiver",
                                            "nameLocation": "2874:8:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 136,
                                            "src": "2858:24:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address_payable",
                                                "typeString": "address payable"
                                            },
                                            "typeName": {
                                                "id": 110,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2858:15:0",
                                                "stateMutability": "payable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 117,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 114,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "2893:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 115,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "2893:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "id": 113,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "2885:8:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_payable_$",
                                                "typeString": "type(address payable)"
                                            },
                                            "typeName": {
                                                "id": 112,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2885:8:0",
                                                "stateMutability": "payable",
                                                "typeDescriptions": {}
                                            }
                                        },
                                        "id": 116,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2885:19:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "2858:46:0"
                                },
                                {
                                    "assignments": [
                                        119
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 119,
                                            "mutability": "mutable",
                                            "name": "amount",
                                            "nameLocation": "2923:6:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 136,
                                            "src": "2915:14:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 118,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2915:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 123,
                                    "initialValue": {
                                        "baseExpression": {
                                            "id": 120,
                                            "name": "pendingWithdrawals",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 26,
                                            "src": "2932:18:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                "typeString": "mapping(address => uint256)"
                                            }
                                        },
                                        "id": 122,
                                        "indexExpression": {
                                            "id": 121,
                                            "name": "receiver",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 111,
                                            "src": "2951:8:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address_payable",
                                                "typeString": "address payable"
                                            }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2932:28:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "2915:45:0"
                                },
                                {
                                    "expression": {
                                        "id": 128,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "baseExpression": {
                                                "id": 124,
                                                "name": "pendingWithdrawals",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 26,
                                                "src": "3040:18:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                    "typeString": "mapping(address => uint256)"
                                                }
                                            },
                                            "id": 126,
                                            "indexExpression": {
                                                "id": 125,
                                                "name": "receiver",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 111,
                                                "src": "3059:8:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "3040:28:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "30",
                                            "id": 127,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3071:1:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                        },
                                        "src": "3040:32:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 129,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3040:32:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 133,
                                                "name": "amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 119,
                                                "src": "3100:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 130,
                                                "name": "receiver",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 111,
                                                "src": "3082:8:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            "id": 132,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "transfer",
                                            "nodeType": "MemberAccess",
                                            "src": "3082:17:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                                "typeString": "function (uint256)"
                                            }
                                        },
                                        "id": 134,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3082:25:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 135,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3082:25:0"
                                }
                            ]
                        },
                        "functionSelector": "3ccfd60b",
                        "id": 137,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "withdraw",
                        "nameLocation": "2698:8:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 108,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2706:2:0"
                        },
                        "returnParameters": {
                            "id": 109,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2716:0:0"
                        },
                        "scope": 227,
                        "src": "2689:425:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 147,
                            "nodeType": "Block",
                            "src": "3181:54:0",
                            "statements": [
                                {
                                    "expression": {
                                        "baseExpression": {
                                            "id": 142,
                                            "name": "pendingWithdrawals",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 26,
                                            "src": "3198:18:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                "typeString": "mapping(address => uint256)"
                                            }
                                        },
                                        "id": 145,
                                        "indexExpression": {
                                            "expression": {
                                                "id": 143,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967281,
                                                "src": "3217:3:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                }
                                            },
                                            "id": 144,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "3217:10:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "3198:30:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "functionReturnParameters": 141,
                                    "id": 146,
                                    "nodeType": "Return",
                                    "src": "3191:37:0"
                                }
                            ]
                        },
                        "functionSelector": "e322ad2b",
                        "id": 148,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "availableToWithdraw",
                        "nameLocation": "3129:19:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 138,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3148:2:0"
                        },
                        "returnParameters": {
                            "id": 141,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 140,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 148,
                                    "src": "3172:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 139,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3172:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3171:9:0"
                        },
                        "scope": 227,
                        "src": "3120:115:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 179,
                            "nodeType": "Block",
                            "src": "3495:451:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "arguments": [
                                                                    {
                                                                        "hexValue": "4e4654566f75636865722875696e7432353620746f6b656e49642c75696e74323536206d696e50726963652c737472696e672075726929",
                                                                        "id": 162,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "kind": "string",
                                                                        "lValueRequested": false,
                                                                        "nodeType": "Literal",
                                                                        "src": "3664:57:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_stringliteral_6316f9ddd4d59a364f3b95c26bab9d392c3380ace0fff15e91ed76f0d8bcd15a",
                                                                            "typeString": "literal_string \"NFTVoucher(uint256 tokenId,uint256 minPrice,string uri)\""
                                                                        },
                                                                        "value": "NFTVoucher(uint256 tokenId,uint256 minPrice,string uri)"
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_stringliteral_6316f9ddd4d59a364f3b95c26bab9d392c3380ace0fff15e91ed76f0d8bcd15a",
                                                                            "typeString": "literal_string \"NFTVoucher(uint256 tokenId,uint256 minPrice,string uri)\""
                                                                        }
                                                                    ],
                                                                    "id": 161,
                                                                    "name": "keccak256",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 4294967288,
                                                                    "src": "3625:9:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                                                    }
                                                                },
                                                                "id": 163,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "3625:122:0",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bytes32",
                                                                    "typeString": "bytes32"
                                                                }
                                                            },
                                                            {
                                                                "expression": {
                                                                    "id": 164,
                                                                    "name": "voucher",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 152,
                                                                    "src": "3773:7:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_struct$_NFTVoucher_$48_calldata_ptr",
                                                                        "typeString": "struct Lazy.NFTVoucher calldata"
                                                                    }
                                                                },
                                                                "id": 165,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "tokenId",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 41,
                                                                "src": "3773:15:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            {
                                                                "expression": {
                                                                    "id": 166,
                                                                    "name": "voucher",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 152,
                                                                    "src": "3814:7:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_struct$_NFTVoucher_$48_calldata_ptr",
                                                                        "typeString": "struct Lazy.NFTVoucher calldata"
                                                                    }
                                                                },
                                                                "id": 167,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "minPrice",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 44,
                                                                "src": "3814:16:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            {
                                                                "arguments": [
                                                                    {
                                                                        "arguments": [
                                                                            {
                                                                                "expression": {
                                                                                    "id": 171,
                                                                                    "name": "voucher",
                                                                                    "nodeType": "Identifier",
                                                                                    "overloadedDeclarations": [],
                                                                                    "referencedDeclaration": 152,
                                                                                    "src": "3872:7:0",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_struct$_NFTVoucher_$48_calldata_ptr",
                                                                                        "typeString": "struct Lazy.NFTVoucher calldata"
                                                                                    }
                                                                                },
                                                                                "id": 172,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": false,
                                                                                "lValueRequested": false,
                                                                                "memberName": "uri",
                                                                                "nodeType": "MemberAccess",
                                                                                "referencedDeclaration": 47,
                                                                                "src": "3872:11:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_string_calldata_ptr",
                                                                                    "typeString": "string calldata"
                                                                                }
                                                                            }
                                                                        ],
                                                                        "expression": {
                                                                            "argumentTypes": [
                                                                                {
                                                                                    "typeIdentifier": "t_string_calldata_ptr",
                                                                                    "typeString": "string calldata"
                                                                                }
                                                                            ],
                                                                            "id": 170,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": true,
                                                                            "lValueRequested": false,
                                                                            "nodeType": "ElementaryTypeNameExpression",
                                                                            "src": "3866:5:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                                                                "typeString": "type(bytes storage pointer)"
                                                                            },
                                                                            "typeName": {
                                                                                "id": 169,
                                                                                "name": "bytes",
                                                                                "nodeType": "ElementaryTypeName",
                                                                                "src": "3866:5:0",
                                                                                "typeDescriptions": {}
                                                                            }
                                                                        },
                                                                        "id": 173,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "kind": "typeConversion",
                                                                        "lValueRequested": false,
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "3866:18:0",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_bytes_calldata_ptr",
                                                                            "typeString": "bytes calldata"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_bytes_calldata_ptr",
                                                                            "typeString": "bytes calldata"
                                                                        }
                                                                    ],
                                                                    "id": 168,
                                                                    "name": "keccak256",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 4294967288,
                                                                    "src": "3856:9:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                                                    }
                                                                },
                                                                "id": 174,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "3856:29:0",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bytes32",
                                                                    "typeString": "bytes32"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_bytes32",
                                                                    "typeString": "bytes32"
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_bytes32",
                                                                    "typeString": "bytes32"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "id": 159,
                                                                "name": "abi",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967295,
                                                                "src": "3589:3:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_abi",
                                                                    "typeString": "abi"
                                                                }
                                                            },
                                                            "id": 160,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "memberName": "encode",
                                                            "nodeType": "MemberAccess",
                                                            "src": "3589:10:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                                                "typeString": "function () pure returns (bytes memory)"
                                                            }
                                                        },
                                                        "id": 175,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "3589:318:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes_memory_ptr",
                                                            "typeString": "bytes memory"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bytes_memory_ptr",
                                                            "typeString": "bytes memory"
                                                        }
                                                    ],
                                                    "id": 158,
                                                    "name": "keccak256",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967288,
                                                    "src": "3558:9:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                                    }
                                                },
                                                "id": 176,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3558:367:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            ],
                                            "id": 157,
                                            "name": "_hashTypedDataV4",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2794,
                                            "src": "3524:16:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                                                "typeString": "function (bytes32) view returns (bytes32)"
                                            }
                                        },
                                        "id": 177,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3524:415:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        }
                                    },
                                    "functionReturnParameters": 156,
                                    "id": 178,
                                    "nodeType": "Return",
                                    "src": "3505:434:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 149,
                            "nodeType": "StructuredDocumentation",
                            "src": "3241:145:0",
                            "text": "@notice Returns a hash of the given NFTVoucher, prepared using EIP712 typed data hashing rules.\n @param voucher An NFTVoucher to hash."
                        },
                        "id": 180,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "_hash",
                        "nameLocation": "3400:5:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 153,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 152,
                                    "mutability": "mutable",
                                    "name": "voucher",
                                    "nameLocation": "3426:7:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 180,
                                    "src": "3406:27:0",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_NFTVoucher_$48_calldata_ptr",
                                        "typeString": "struct Lazy.NFTVoucher"
                                    },
                                    "typeName": {
                                        "id": 151,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 150,
                                            "name": "NFTVoucher",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 48,
                                            "src": "3406:10:0"
                                        },
                                        "referencedDeclaration": 48,
                                        "src": "3406:10:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_NFTVoucher_$48_storage_ptr",
                                            "typeString": "struct Lazy.NFTVoucher"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3405:29:0"
                        },
                        "returnParameters": {
                            "id": 156,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 155,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 180,
                                    "src": "3482:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                    },
                                    "typeName": {
                                        "id": 154,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3482:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3481:9:0"
                        },
                        "scope": 227,
                        "src": "3391:555:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 204,
                            "nodeType": "Block",
                            "src": "4428:115:0",
                            "statements": [
                                {
                                    "assignments": [
                                        192
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 192,
                                            "mutability": "mutable",
                                            "name": "digest",
                                            "nameLocation": "4446:6:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 204,
                                            "src": "4438:14:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                            },
                                            "typeName": {
                                                "id": 191,
                                                "name": "bytes32",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4438:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 196,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "id": 194,
                                                "name": "voucher",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 184,
                                                "src": "4461:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_NFTVoucher_$48_calldata_ptr",
                                                    "typeString": "struct Lazy.NFTVoucher calldata"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_struct$_NFTVoucher_$48_calldata_ptr",
                                                    "typeString": "struct Lazy.NFTVoucher calldata"
                                                }
                                            ],
                                            "id": 193,
                                            "name": "_hash",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 180,
                                            "src": "4455:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_struct$_NFTVoucher_$48_calldata_ptr_$returns$_t_bytes32_$",
                                                "typeString": "function (struct Lazy.NFTVoucher calldata) view returns (bytes32)"
                                            }
                                        },
                                        "id": 195,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4455:14:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "4438:31:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 201,
                                                "name": "signature",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 186,
                                                "src": "4526:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            ],
                                            "expression": {
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "expression": {
                                                        "id": 197,
                                                        "name": "digest",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 192,
                                                        "src": "4486:6:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes32",
                                                            "typeString": "bytes32"
                                                        }
                                                    },
                                                    "id": 198,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "toEthSignedMessageHash",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 2598,
                                                    "src": "4486:29:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$bound_to$_t_bytes32_$",
                                                        "typeString": "function (bytes32) pure returns (bytes32)"
                                                    }
                                                },
                                                "id": 199,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4486:31:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            },
                                            "id": 200,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "recover",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 2407,
                                            "src": "4486:39:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$bound_to$_t_bytes32_$",
                                                "typeString": "function (bytes32,bytes memory) pure returns (address)"
                                            }
                                        },
                                        "id": 202,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4486:50:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "functionReturnParameters": 190,
                                    "id": 203,
                                    "nodeType": "Return",
                                    "src": "4479:57:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 181,
                            "nodeType": "StructuredDocumentation",
                            "src": "3952:341:0",
                            "text": "@notice Verifies the signature for a given NFTVoucher, returning the address of the signer.\n @dev Will revert if the signature is invalid. Does not verify that the signer is authorized to mint NFTs.\n @param voucher An NFTVoucher describing an unminted NFT.\n @param signature An EIP712 signature of the given voucher."
                        },
                        "id": 205,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "_verify",
                        "nameLocation": "4307:7:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 187,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 184,
                                    "mutability": "mutable",
                                    "name": "voucher",
                                    "nameLocation": "4335:7:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 205,
                                    "src": "4315:27:0",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_NFTVoucher_$48_calldata_ptr",
                                        "typeString": "struct Lazy.NFTVoucher"
                                    },
                                    "typeName": {
                                        "id": 183,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 182,
                                            "name": "NFTVoucher",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 48,
                                            "src": "4315:10:0"
                                        },
                                        "referencedDeclaration": 48,
                                        "src": "4315:10:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_NFTVoucher_$48_storage_ptr",
                                            "typeString": "struct Lazy.NFTVoucher"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 186,
                                    "mutability": "mutable",
                                    "name": "signature",
                                    "nameLocation": "4357:9:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 205,
                                    "src": "4344:22:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes"
                                    },
                                    "typeName": {
                                        "id": 185,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4344:5:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage_ptr",
                                            "typeString": "bytes"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4314:53:0"
                        },
                        "returnParameters": {
                            "id": 190,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 189,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 205,
                                    "src": "4415:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 188,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4415:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4414:9:0"
                        },
                        "scope": 227,
                        "src": "4298:245:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "internal"
                    },
                    {
                        "baseFunctions": [
                            290,
                            703
                        ],
                        "body": {
                            "id": 225,
                            "nodeType": "Block",
                            "src": "4707:133:0",
                            "statements": [
                                {
                                    "expression": {
                                        "commonType": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "id": 223,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "arguments": [
                                                {
                                                    "id": 217,
                                                    "name": "interfaceId",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 207,
                                                    "src": "4761:11:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                    }
                                                ],
                                                "expression": {
                                                    "id": 215,
                                                    "name": "ERC721",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1440,
                                                    "src": "4736:6:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_ERC721_$1440_$",
                                                        "typeString": "type(contract ERC721)"
                                                    }
                                                },
                                                "id": 216,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "supportsInterface",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 703,
                                                "src": "4736:24:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                                                    "typeString": "function (bytes4) view returns (bool)"
                                                }
                                            },
                                            "id": 218,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "4736:37:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "||",
                                        "rightExpression": {
                                            "arguments": [
                                                {
                                                    "id": 221,
                                                    "name": "interfaceId",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 207,
                                                    "src": "4821:11:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                    }
                                                ],
                                                "expression": {
                                                    "id": 219,
                                                    "name": "AccessControl",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 536,
                                                    "src": "4789:13:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_AccessControl_$536_$",
                                                        "typeString": "type(contract AccessControl)"
                                                    }
                                                },
                                                "id": 220,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "supportsInterface",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 290,
                                                "src": "4789:31:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                                                    "typeString": "function (bytes4) view returns (bool)"
                                                }
                                            },
                                            "id": 222,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "4789:44:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "src": "4736:97:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "functionReturnParameters": 214,
                                    "id": 224,
                                    "nodeType": "Return",
                                    "src": "4717:116:0"
                                }
                            ]
                        },
                        "functionSelector": "01ffc9a7",
                        "id": 226,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "supportsInterface",
                        "nameLocation": "4558:17:0",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 211,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [
                                {
                                    "id": 209,
                                    "name": "AccessControl",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 536,
                                    "src": "4657:13:0"
                                },
                                {
                                    "id": 210,
                                    "name": "ERC721",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1440,
                                    "src": "4672:6:0"
                                }
                            ],
                            "src": "4648:31:0"
                        },
                        "parameters": {
                            "id": 208,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 207,
                                    "mutability": "mutable",
                                    "name": "interfaceId",
                                    "nameLocation": "4583:11:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 226,
                                    "src": "4576:18:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                    },
                                    "typeName": {
                                        "id": 206,
                                        "name": "bytes4",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4576:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4575:20:0"
                        },
                        "returnParameters": {
                            "id": 214,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 213,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 226,
                                    "src": "4697:4:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 212,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4697:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4696:6:0"
                        },
                        "scope": 227,
                        "src": "4549:291:0",
                        "stateMutability": "view",
                        "virtual": true,
                        "visibility": "public"
                    }
                ],
                "scope": 228,
                "src": "851:3991:0",
                "usedErrors": []
            }
        ],
        "src": "0:4843:0"
    },
    "functionHashes": {
        "DEFAULT_ADMIN_ROLE()": "a217fddf",
        "MINTER_ROLE()": "d5391393",
        "approve(address,uint256)": "095ea7b3",
        "availableToWithdraw()": "e322ad2b",
        "balanceOf(address)": "70a08231",
        "getApproved(uint256)": "081812fc",
        "getRoleAdmin(bytes32)": "248a9ca3",
        "grantRole(bytes32,address)": "2f2ff15d",
        "hasRole(bytes32,address)": "91d14854",
        "isApprovedForAll(address,address)": "e985e9c5",
        "name()": "06fdde03",
        "ownerOf(uint256)": "6352211e",
        "redeem(address,(uint256,uint256,string),bytes)": "1c098e90",
        "renounceRole(bytes32,address)": "36568abe",
        "revokeRole(bytes32,address)": "d547741f",
        "safeTransferFrom(address,address,uint256)": "42842e0e",
        "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
        "setApprovalForAll(address,bool)": "a22cb465",
        "supportsInterface(bytes4)": "01ffc9a7",
        "symbol()": "95d89b41",
        "tokenURI(uint256)": "c87b56dd",
        "transferFrom(address,address,uint256)": "23b872dd",
        "withdraw()": "3ccfd60b"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "1919000",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "DEFAULT_ADMIN_ROLE()": "306",
            "MINTER_ROLE()": "261",
            "approve(address,uint256)": "infinite",
            "availableToWithdraw()": "2470",
            "balanceOf(address)": "2634",
            "getApproved(uint256)": "4799",
            "getRoleAdmin(bytes32)": "2489",
            "grantRole(bytes32,address)": "infinite",
            "hasRole(bytes32,address)": "2721",
            "isApprovedForAll(address,address)": "infinite",
            "name()": "infinite",
            "ownerOf(uint256)": "2579",
            "redeem(address,(uint256,uint256,string),bytes)": "infinite",
            "renounceRole(bytes32,address)": "29090",
            "revokeRole(bytes32,address)": "infinite",
            "safeTransferFrom(address,address,uint256)": "infinite",
            "safeTransferFrom(address,address,uint256,bytes)": "infinite",
            "setApprovalForAll(address,bool)": "26819",
            "supportsInterface(bytes4)": "infinite",
            "symbol()": "infinite",
            "tokenURI(uint256)": "infinite",
            "transferFrom(address,address,uint256)": "infinite",
            "withdraw()": "infinite"
        },
        "internal": {
            "_hash(struct Lazy.NFTVoucher calldata)": "infinite",
            "_verify(struct Lazy.NFTVoucher calldata,bytes memory)": "infinite"
        }
    }
}